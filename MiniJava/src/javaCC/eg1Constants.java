/* Generated By:JavaCC: Do not edit this line. eg1Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface eg1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 5;
  /** RegularExpression Id. */
  int ASSIGN = 6;
  /** RegularExpression Id. */
  int BOOLEAN = 7;
  /** RegularExpression Id. */
  int BRACE_L = 8;
  /** RegularExpression Id. */
  int BRACE_R = 9;
  /** RegularExpression Id. */
  int LBRACKET = 10;
  /** RegularExpression Id. */
  int RBRACKET = 11;
  /** RegularExpression Id. */
  int CLASS = 12;
  /** RegularExpression Id. */
  int COMMA = 13;
  /** RegularExpression Id. */
  int DIVIDE = 14;
  /** RegularExpression Id. */
  int DOT = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int EXTENDS = 17;
  /** RegularExpression Id. */
  int FALSE = 18;
  /** RegularExpression Id. */
  int ID = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int INT = 21;
  /** RegularExpression Id. */
  int LENGTH = 22;
  /** RegularExpression Id. */
  int LESSTHAN = 23;
  /** RegularExpression Id. */
  int MAIN = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int NEW = 26;
  /** RegularExpression Id. */
  int NOT = 27;
  /** RegularExpression Id. */
  int NUM = 28;
  /** RegularExpression Id. */
  int LPAREN = 29;
  /** RegularExpression Id. */
  int RPAREN = 30;
  /** RegularExpression Id. */
  int PLUS = 31;
  /** RegularExpression Id. */
  int PUBLIC = 32;
  /** RegularExpression Id. */
  int REAL = 33;
  /** RegularExpression Id. */
  int RETURN = 34;
  /** RegularExpression Id. */
  int SEMICOLON = 35;
  /** RegularExpression Id. */
  int SYSTEM = 36;
  /** RegularExpression Id. */
  int STATIC = 37;
  /** RegularExpression Id. */
  int STRING = 38;
  /** RegularExpression Id. */
  int THIS = 39;
  /** RegularExpression Id. */
  int TIMES = 40;
  /** RegularExpression Id. */
  int TRUE = 41;
  /** RegularExpression Id. */
  int VOID = 42;
  /** RegularExpression Id. */
  int WHILE = 43;
  /** RegularExpression Id. */
  int DIGIT = 44;
  /** RegularExpression Id. */
  int LETMIN = 45;
  /** RegularExpression Id. */
  int LETMAI = 46;
  /** RegularExpression Id. */
  int LET = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"&&\"",
    "\"=\"",
    "\"boolean\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"class\"",
    "\",\"",
    "\"/\"",
    "\".\"",
    "\"else\"",
    "\"extends\"",
    "\"false\"",
    "<ID>",
    "\"if\"",
    "\"int\"",
    "\"length\"",
    "\"<\"",
    "\"main\"",
    "\"-\"",
    "\"new\"",
    "\"!\"",
    "<NUM>",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"public\"",
    "<REAL>",
    "\"return\"",
    "\";\"",
    "\"System.out.println\"",
    "\"static\"",
    "\"String\"",
    "\"this\"",
    "\"*\"",
    "\"true\"",
    "\"void\"",
    "\"while\"",
    "<DIGIT>",
    "<LETMIN>",
    "<LETMAI>",
    "<LET>",
  };

}
